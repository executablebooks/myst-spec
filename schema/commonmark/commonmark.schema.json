{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://spec.myst.tools/json-schema/commonmark.schema.json",
  "description": "Existing basic commonmark types for myst mdast - https://github.com/syntax-tree/mdast",
  "$defs": {
    "Paragraph": {
      "type": "object",
      "required": ["type", "children"],
      "properties": {
        "type": {
          "const": "paragraph"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "myst.schema.json#/$defs/PhrasingContent"
          }
        },
        "position": {},
        "data": {}
      },
      "additionalProperties": false,
      "allOf": [{ "$ref": "unist.schema.json#/$defs/Node" }]
    },
    "Heading": {
      "type": "object",
      "required": ["type", "depth", "children"],
      "properties": {
        "type": {
          "const": "heading"
        },
        "depth": {
          "type": "integer",
          "minimum": 1,
          "maximum": 6
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "myst.schema.json#/$defs/PhrasingContent"
          }
        },
        "identifier": {},
        "label": {},
        "position": {},
        "data": {}
      },
      "additionalProperties": false,
      "allOf": [
        { "$ref": "unist.schema.json#/$defs/Node" },
        { "$ref": "#/$defs/OptionalAssociation" }
      ]
    },
    "ThematicBreak": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "const": "thematicBreak"
        },
        "position": {},
        "data": {}
      },
      "additionalProperties": false,
      "allOf": [{ "$ref": "unist.schema.json#/$defs/Node" }]
    },
    "Blockquote": {
      "type": "object",
      "required": ["type", "children"],
      "properties": {
        "type": {
          "const": "blockquote"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "myst.schema.json#/$defs/FlowContent"
          }
        },
        "position": {},
        "data": {}
      },
      "additionalProperties": false,
      "allOf": [{ "$ref": "unist.schema.json#/$defs/Node" }]
    },
    "List": {
      "type": "object",
      "required": ["type", "children"],
      "properties": {
        "type": {
          "const": "list"
        },
        "ordered": {
          "description": "Is item order important or not?",
          "type": "boolean"
        },
        "start": {
          "description": "Starting number of ordered list",
          "type": "integer"
        },
        "spread": {
          "description": "One or more children are separated with a blank line from others",
          "type": "boolean"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "myst.schema.json#/$defs/ListContent"
          }
        },
        "position": {},
        "data": {}
      },
      "additionalProperties": false,
      "allOf": [{ "$ref": "unist.schema.json#/$defs/Node" }]
    },
    "ListItem": {
      "type": "object",
      "required": ["type", "children"],
      "properties": {
        "type": {
          "const": "listItem"
        },
        "spread": {
          "description": "One or more children are separated with a blank line from others",
          "type": "boolean"
        },
        "children": {
          "type": "array",
          "items": {
            "anyOf": [
              { "$ref": "myst.schema.json#/$defs/PhrasingContent" },
              { "$ref": "myst.schema.json#/$defs/FlowContent" }
            ]
          }
        },
        "position": {},
        "data": {}
      },
      "additionalProperties": false,
      "allOf": [{ "$ref": "unist.schema.json#/$defs/Node" }]
    },
    "HTML": {
      "description": "Fragment of raw HTML - does not need to be valid or complete",
      "type": "object",
      "required": ["type", "value"],
      "properties": {
        "type": {
          "const": "html"
        },
        "value": {},
        "position": {},
        "data": {}
      },
      "additionalProperties": false,
      "allOf": [{ "$ref": "unist.schema.json#/$defs/Literal" }]
    },
    "Code": {
      "description": "block of preformatted text",
      "type": "object",
      "required": ["type", "value"],
      "properties": {
        "type": {
          "const": "code"
        },
        "lang": {
          "description": "language of the code",
          "type": "string"
        },
        "meta": {
          "description": "custom information relating to the node",
          "type": "string"
        },
        "value": {},
        "position": {},
        "data": {}
      },
      "if": {
        "required": ["meta"]
      },
      "then": {
        "required": ["lang"]
      },
      "else": {},
      "additionalProperties": false,
      "allOf": [{ "$ref": "unist.schema.json#/$defs/Literal" }]
    },
    "Definition": {
      "description": "reference to a url resource",
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "const": "definition"
        },
        "identifier": {},
        "label": {},
        "url": {},
        "title": {},
        "position": {},
        "data": {}
      },
      "additionalProperties": false,
      "allOf": [
        { "$ref": "unist.schema.json#/$defs/Node" },
        { "$ref": "#/$defs/Association" },
        { "$ref": "#/$defs/Resource" }
      ]
    },
    "Text": {
      "type": "object",
      "required": ["type", "value"],
      "properties": {
        "type": {
          "const": "text"
        },
        "value": {},
        "position": {},
        "data": {}
      },
      "additionalProperties": false,
      "allOf": [{ "$ref": "unist.schema.json#/$defs/Literal" }]
    },
    "Emphasis": {
      "description": "stressed, italicized content",
      "type": "object",
      "required": ["type", "children"],
      "properties": {
        "type": {
          "const": "emphasis"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "myst.schema.json#/$defs/PhrasingContent"
          }
        },
        "position": {},
        "data": {}
      },
      "additionalProperties": false,
      "allOf": [{ "$ref": "unist.schema.json#/$defs/Node" }]
    },
    "EmphasisStatic": {
      "description": "stressed, italicized content, with static children; used when parent node requires static content",
      "type": "object",
      "required": ["type", "children"],
      "properties": {
        "type": {
          "const": "emphasis"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "myst.schema.json#/$defs/StaticPhrasingContent"
          }
        },
        "position": {},
        "data": {}
      },
      "additionalProperties": false,
      "allOf": [{ "$ref": "unist.schema.json#/$defs/Node" }]
    },
    "Strong": {
      "description": "important, serious, urgent, bold content",
      "type": "object",
      "required": ["type", "children"],
      "properties": {
        "type": {
          "const": "strong"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "myst.schema.json#/$defs/PhrasingContent"
          }
        },
        "position": {},
        "data": {}
      },
      "additionalProperties": false,
      "allOf": [{ "$ref": "unist.schema.json#/$defs/Node" }]
    },
    "StrongStatic": {
      "description": "important, serious, urgent, bold content, with static children; used when parent node requires static content",
      "type": "object",
      "required": ["type", "children"],
      "properties": {
        "type": {
          "const": "strong"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "myst.schema.json#/$defs/StaticPhrasingContent"
          }
        },
        "position": {},
        "data": {}
      },
      "additionalProperties": false,
      "allOf": [{ "$ref": "unist.schema.json#/$defs/Node" }]
    },
    "InlineCode": {
      "description": "fragment of code",
      "type": "object",
      "required": ["type", "value"],
      "properties": {
        "type": {
          "const": "inlineCode"
        },
        "value": {},
        "position": {},
        "data": {}
      },
      "additionalProperties": false,
      "allOf": [{ "$ref": "unist.schema.json#/$defs/Literal" }]
    },
    "Break": {
      "description": "line break",
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "const": "break"
        },
        "position": {},
        "data": {}
      },
      "additionalProperties": false,
      "allOf": [{ "$ref": "unist.schema.json#/$defs/Node" }]
    },
    "Link": {
      "description": "hyperlink",
      "type": "object",
      "required": ["type", "children"],
      "properties": {
        "type": {
          "const": "link"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "myst.schema.json#/$defs/StaticPhrasingContent"
          }
        },
        "url": {},
        "title": {},
        "position": {},
        "data": {}
      },
      "additionalProperties": false,
      "allOf": [
        { "$ref": "unist.schema.json#/$defs/Node" },
        { "$ref": "#/$defs/Resource" }
      ]
    },
    "Image": {
      "description": "image hyperlink",
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "const": "image"
        },
        "url": {},
        "title": {},
        "alt": {},
        "position": {},
        "data": {}
      },
      "additionalProperties": false,
      "allOf": [
        { "$ref": "unist.schema.json#/$defs/Node" },
        { "$ref": "#/$defs/Resource" },
        { "$ref": "#/$defs/Alternative" }
      ]
    },
    "LinkReference": {
      "description": "hyperlink through association",
      "type": "object",
      "required": ["type", "children"],
      "properties": {
        "type": {
          "const": "linkReference"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "myst.schema.json#/$defs/StaticPhrasingContent"
          }
        },
        "referenceType": {},
        "identifier": {},
        "label": {},
        "position": {},
        "data": {}
      },
      "additionalProperties": false,
      "allOf": [
        { "$ref": "unist.schema.json#/$defs/Node" },
        { "$ref": "#/$defs/Reference" },
        { "$ref": "#/$defs/Association" }
      ]
    },
    "ImageReference": {
      "description": "image through association",
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "const": "imageReference"
        },
        "referenceType": {},
        "identifier": {},
        "label": {},
        "alt": {},
        "position": {},
        "data": {}
      },
      "additionalProperties": false,
      "allOf": [
        { "$ref": "unist.schema.json#/$defs/Node" },
        { "$ref": "#/$defs/Reference" },
        { "$ref": "#/$defs/Association" },
        { "$ref": "#/$defs/Alternative" }
      ]
    },
    "Resource": {
      "description": "reference to external resource",
      "type": "object",
      "required": ["url"],
      "properties": {
        "url": {
          "type": "string",
          "format": "uri-reference"
        },
        "title": {
          "description": "advisory information, e.g. for a tooltip",
          "type": "string"
        }
      }
    },
    "OptionalAssociation": {
      "description": "internal relation from one node to another; not required by node",
      "type": "object",
      "properties": {
        "identifier": {
          "description": "identifier that may match another node; value is unparsed and must be normalized such that whitespace is collapsed to single space, initial/final space is trimmed, and case is folded",
          "type": "string"
        },
        "label": {
          "description": "node label; character escapes and references are parsed; may be normalized to a unique identifier",
          "type": "string"
        }
      }
    },
    "Association": {
      "description": "internal relation from one node to another",
      "type": "object",
      "required": ["identifier"],
      "allOf": [{ "$ref": "#/$defs/OptionalAssociation" }]
    },
    "Alternative": {
      "description": "alternative description of image",
      "type": "object",
      "properties": {
        "alt": {
          "description": "field describing the image",
          "type": "string"
        }
      }
    },
    "Reference": {
      "description": "marker associated to another node",
      "type": "object",
      "required": ["referenceType"],
      "properties": {
        "referenceType": {
          "description": "explicitness of the reference: shortcut - reference is implicit, identifier inferred; collapsed - refernce explicit, identifier inferred; full - reference explicit, identifier explicit",
          "type": "string",
          "enum": ["shortcut", "collapsed", "full"]
        }
      }
    }
  }
}
